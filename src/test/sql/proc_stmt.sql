CREATE OR REPLACE PROCEDURE RIAPCRT.PROC_MDL_CORP_LOAN_APP_RISK
(
	IN DATA_DATE	VARCHAR(10)
	,IN RUN_TIMES	INTEGER
)
LANGUAGE SQL
/**********************************************************************************************************************/
--ÒÀÀµÔ´±í£º  RDM_INDV_CUST_TRAN_INFO_M
--ÒÀÀµÔ´±í£º  SDS_INDV_CUST_BASE_INFO_M
--ÒÀÀµÔ´±í£º  SDS_LOAN_DUBIL_INFO_M
--ÒÀÀµÔ´±í£º  SDS_INDV_CUST_BASE_INFO
--ÒÀÀµÔ´±í£º  SDS_CRDT_CARD_ACCT_M
--ÒÀÀµÔ´±í£º  RDM_INDV_CUST_BELONG_INFO_M
--ÒÀÀµÔ´±í£º  DDS_LOAN_REQUISITION_PUBLIC
--ÒÀÀµÔ´±í£º  DDS_CUST_CREDIT_CHECKS
--ÒÀÀµÔ´±í£º  DDS_BLFMPMIN
--ÒÀÀµÔ´±í£º  DDS_BLFMPTRF
--ÒÀÀµÔ´±í£º  DDS_IND_CUST_EXPD_ECIF
--¼ÓÔØ²ßÂÔ£º  ÈÕ±í Çå¿Õ²åÈë
--µ÷ÓÃÊ¾Àý£º  CALL PROC_MDL_CORP_LOAN_APP_RISK('2013-01-01', 0)
--±¸×¢£º±¾ÔÂÓÃÓÚÔËÐÐÀúÊ·Êý¾Ý
/**********************************************************************************************************************/
BEGIN

	--¶¨Òå±äÁ¿
	DECLARE SQLCODE INTEGER DEFAULT 0;                  --ÏµÍ³±äÁ¿
	DECLARE SQLSTATE CHAR(5) DEFAULT '00000';           --ÏµÍ³±äÁ¿
	DECLARE V_SQL_CODE INTEGER DEFAULT 0;               --×Ô¶¨ÒåÏµÍ³±äÁ¿
	DECLARE V_SQL_STATE VARCHAR(5) DEFAULT '00000';     --×Ô¶¨ÒåÏµÍ³±äÁ¿
	DECLARE V_ERR_TIME TIMESTAMP;                       --´æ´¢¹ý³ÌÔËÐÐµÄÏµÍ³Ê±¼ä´Á
	DECLARE V_ERR_STR VARCHAR(50);                      --´íÎóÐÅÏ¢
	DECLARE V_PROC_NAME VARCHAR(50);                    --´æ´¢¹ý³ÌÃû³Æ
	DECLARE V_LOAD_DATE DATE;                           --´æ´¢¹ý³ÌÔËÐÐÏµÍ³ÈÕÆÚ
	DECLARE V_DATA_DATE DATE;                           --´æ´¢¹ý³ÌÖ´ÐÐµÄÈÕÆÚ²ÎÊý
	DECLARE V_MIN_DATE DATE;                            --×îÐ¡ÈÕÆÚ,Ä¬ÈÏ1899-12-31
	DECLARE V_MAX_DATE DATE;                            --×î´óÈÕÆÚ,Ä¬ÈÏ9999-12-31
	DECLARE V_START_DATE DATE;                          --´û¼Ç¿¨½»Ò××î´óÈÕÆÚ
	DECLARE V_LAST_DATE DATE;                           --´æ´¢¹ý³ÌÖ´ÐÐÈÕÆÚµÄÉÏÒ»Ìì
	DECLARE V_LAST_Y_DATE DATE;                         --È¥Äê£¨Ç°12¸öÔÂ£©
	DECLARE V_LAST_MTH_DATE DATE;                   	--ÉÏÔÂÄ©
	DECLARE V_FTD_END_DATE DATE;                        --ÉÏÑ®½áÊøÈÕÆÚ
	DECLARE V_MTD_START_DATE DATE;                      --ÖÐÑ®¿ªÊ¼ÈÕÆÚ
	DECLARE V_MTD_END_DATE DATE;                        --ÖÐÑ®½áÊøÈÕÆÚ
	DECLARE V_LTD_START_DATE DATE;                      --ÏÂÑ®¿ªÊ¼ÈÕÆÚ
	DECLARE V_Y_START_DATE DATE;                        --Äê³õÈÕÆÚ
	DECLARE V_M_START_DATE DATE;                        --ÔÂ³õÈÕÆÚ
	DECLARE V_STMT VARCHAR(3000);                       --Çå¿Õ±íÖÐÊý¾Ý
	DECLARE V_LAST_Y_NEXT_START_M DATE;					--È¥Äê±¾ÔÂÏÂÔÂ³õ
	DECLARE V_LAST_HELF_Y_NEXT_START_M DATE;			--°ëÄêÇ°±¾ÔÂÏÂÔÂ³õ

	--Òì³£´¦Àí
	DECLARE CONTINUE HANDLER FOR SQLWARNING, NOT FOUND
	BEGIN
	END;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN

		--±£´æÒì³£´úÂë
		SET V_ERR_STR = REPLACE(CHAR(SQLCODE), ' ', '') || ':' || SQLSTATE;
		SET V_SQL_CODE = INT(SUBSTR(V_ERR_STR, 1, POSSTR(V_ERR_STR, ':') - 1));
		SET V_SQL_STATE = SUBSTR(V_ERR_STR, POSSTR(V_ERR_STR, ':') + 1);

		--»Ø¹öÖ®Ç°µÄËùÓÐ²Ù×÷
		ROLLBACK;

		--½«Òì³£´úÂë¼ÇÂ¼µ½ÈÕÖ¾±íÖÐ
		INSERT INTO ETL_ERRLOG_INFO
		(
			PROC_NAME
			,LOAD_DATE
			,ERR_TIME
			,SQL_CODE
			,SQL_STATE
		)
		VALUES
		(
			V_PROC_NAME
			,V_DATA_DATE
			,V_ERR_TIME
			,V_SQL_CODE
			,V_SQL_STATE
		)
		;

		COMMIT;

		--Å×³ö´íÎóÖµ99999
		SIGNAL SQLSTATE '99999';

	END;

	--±äÁ¿¸³Öµ
	SET V_PROC_NAME = 'PROC_MDL_CORP_LOAN_APP_RISK';
	VALUES CURRENT TIMESTAMP INTO V_ERR_TIME;
	SET V_LOAD_DATE = DATE(V_ERR_TIME);
	SET V_MIN_DATE = DATE('1899-12-31');
	SET V_MAX_DATE = DATE('9999-12-31');
	SET V_START_DATE = DATE('2013-11-30');
	SET V_DATA_DATE = TO_DATE(DATA_DATE, 'YYYY-MM-DD');
	SET V_LAST_DATE = V_DATA_DATE - 1 DAY;
	SET V_LAST_Y_DATE = V_DATA_DATE + 1 DAY - 1 YEAR - 1 DAY;
	SET V_LAST_MTH_DATE = TO_DATE(TO_CHAR(V_DATA_DATE, 'YYYYMM') || '01', 'YYYYMMDD') - 1 DAY;
	SET V_FTD_END_DATE = TO_DATE(TO_CHAR(V_DATA_DATE, 'YYYYMM') || '10', 'YYYYMMDD');
	SET V_MTD_START_DATE = TO_DATE(TO_CHAR(V_DATA_DATE, 'YYYYMM') || '11', 'YYYYMMDD');
	SET V_MTD_END_DATE = TO_DATE(TO_CHAR(V_DATA_DATE, 'YYYYMM') || '20', 'YYYYMMDD');
	SET V_LTD_START_DATE = TO_DATE(TO_CHAR(V_DATA_DATE, 'YYYYMM') || '21', 'YYYYMMDD');
	SET V_Y_START_DATE = TO_DATE(TO_CHAR(V_DATA_DATE, 'YYYY') || '0101', 'YYYYMMDD');
	SET V_M_START_DATE = TO_DATE(TO_CHAR(V_DATA_DATE, 'YYYYMM') || '01', 'YYYYMMDD');
	SET V_LAST_Y_NEXT_START_M = DATE(V_DATA_DATE) + 1 DAY - 1 YEAR;
	SET V_LAST_HELF_Y_NEXT_START_M= DATE(V_DATA_DATE) + 1 DAY - 6 MONTH ;

	--ÔËÐÐ²ßÂÔ:²åÈë
	--SET V_STMT = 'IMPORT FROM /dev/null OF DEL REPLACE INTO RIAPCRT.MDL_CORP_LOAN_APP_RISK';--
	--CALL SYSPROC.ADMIN_CMD(V_STMT);--


  DECLARE GLOBAL TEMPORARY TABLE SESSION.CUST_CONTR_INFO(
    CUST_ID VARCHAR(23)
    ,CONTR_ID VARCHAR(16)
    ,CUST_NAME VARCHAR(80)
    ,CUST_INNER_ID  VARCHAR(20)
    ,CONTR_START_DT DATE
    ,CONTR_LIMT DECIMAL(15,2)
    ,LOAN_PROD_CD VARCHAR(5)
    ,GUAR_MODE_CD VARCHAR(3)
    ,CONTR_MATURE_DT DATE
	)ON COMMIT PRESERVE ROWS
	NOT LOGGED
	WITH REPLACE
	IN RIAP_UTMP4K1;


	INSERT INTO SESSION.CUST_CONTR_INFO
  SELECT
    CUST_ID
    ,CONTR_ID
    ,CUST_NAME
    ,CUST_INNER_ID
    ,CONTR_START_DT
    ,CONTR_LIMT
    ,LOAN_PROD_CD
    ,GUAR_MODE_CD
    ,CONTR_MATURE_DT
  FROM
  (
  SELECT
    A1.CUST_ID
    ,A1.CONTR_ID
    ,A1.CUST_NAME
    ,A1.CUST_INNER_ID
    ,A2.CONTR_START_DT
    ,A2.CONTR_LIMT
    ,A2.LOAN_PROD_CD --´û¿î²úÆ·´úÂë
    ,A2.GUAR_MODE_CD --µ£±£·½Ê½
    ,A2.CONTR_MATURE_DT
    FROM
    (
    SELECT
    B1.CONTR_ID
    ,COALESCE(B2.CUST_ID,B1.CUST_ID) AS CUST_ID
    ,COALESCE(B2.CUST_NAME,B1.CUST_NAME) AS CUST_NAME
    ,COALESCE(B2.CUST_INNER_ID,B1.CUST_INNER_ID) AS CUST_INNER_ID
    FROM
        (
        SELECT
        CUST_ID
        ,START_DT
        ,CONTR_ID
        ,CUST_NAME
        ,CUST_INNER_ID
        ,ROWNUMBER() OVER (PARTITION BY CONTR_ID ORDER BY START_DT) AS CUST_RANK
        FROM ADS_LOAN_CONTR_INFO
        WHERE CUST_ID NOT LIKE '1%'  AND START_DT<=V_DATA_DATE
        ) B1
        LEFT JOIN
        (
        SELECT
        CUST_ID
        ,STAT_DT
        ,CONTR_ID
        ,CUST_NAME
        ,CUST_INNER_ID
        ,OPEN_DT
        ,ROWNUMBER() OVER (PARTITION BY CONTR_ID ORDER BY STAT_DT) AS CUST_RANK
        FROM SDS_LOAN_DUBIL_INFO_M
        WHERE CUST_ID NOT LIKE '1%' AND ACCT_ID IS NOT NULL AND TRIM(ACCT_ID)<>'' AND STAT_DT<=V_DATA_DATE
        ) B2
        ON B1.CONTR_ID=B2.CONTR_ID AND B2.CUST_RANK=1
        WHERE B1.CUST_RANK=1
    )A1
    INNER JOIN
    (
    SELECT NFAACONO AS CONTR_ID
      ,NFABDATE AS CONTR_START_DT
      ,NFAALLMT AS CONTR_LIMT
      ,NFAAPRNO AS LOAN_PROD_CD --´û¿î²úÆ·´úÂë
      ,NFAASSTY AS GUAR_MODE_CD --µ£±£·½Ê½
      ,NFACDATE AS CONTR_MATURE_DT
      FROM DDS_BLFMCONF
      WHERE (V_DATA_DATE BETWEEN VALID_FROM_DT AND VALID_TO_DT)
      AND NFAALCOT='11' --ºÏÍ¬ÖÖÀà
      AND NFABDATE BETWEEN '2013-07-01' AND V_DATA_DATE --ÆðÊ¼ÈÕÆÚ
      AND NFAACSNO LIKE '82%'
      AND NFARBRNO LIKE '881%'--»ã×Ü»ú¹¹ºÅ
    )A2
    ON A1.CONTR_ID=A2.CONTR_ID
    LEFT JOIN MDL_CORP_LOAN_APP_RISK A3
    ON A1.CONTR_ID=A3.CONTR_ID
    WHERE A3.CONTR_ID IS NULL
   )
  ;


  DECLARE GLOBAL TEMPORARY TABLE SESSION.TMP_ACCT_CUST_INFO(
    ACCT_ID VARCHAR(15)
    ,CONTR_ID VARCHAR(16)
    ,CUST_ID VARCHAR(23)
    ,CUST_NAME VARCHAR(80)
    ,CUST_INNER_ID VARCHAR(20)
    ,CONTR_START_DT DATE
	)ON COMMIT PRESERVE ROWS
	NOT LOGGED
	WITH REPLACE
	IN RIAP_UTMP4K1;

	INSERT INTO SESSION.TMP_ACCT_CUST_INFO
  SELECT
    A1.ACCT_ID
    ,A2.CONTR_ID
    ,A2.CUST_ID
    ,A2.CUST_NAME
    ,A2.CUST_INNER_ID
    ,A2.CONTR_START_DT
  FROM SDS_LOAN_DUBIL_INFO A1
  INNER JOIN SESSION.CUST_CONTR_INFO A2
  ON A1.CONTR_ID=A2.CONTR_ID
  WHERE A1.CUST_ID NOT LIKE '1%' AND A1.ACCT_ID IS NOT NULL AND TRIM(A1.ACCT_ID)<>''
  ;


  DECLARE GLOBAL TEMPORARY TABLE SESSION.CUST_ACCT_INFO(
	ACCT_ID	VARCHAR(15)
	,CUST_ID	VARCHAR(23)
	)ON COMMIT PRESERVE ROWS
	NOT LOGGED
	WITH REPLACE
	IN RIAP_UTMP4K1;

	INSERT INTO SESSION.CUST_ACCT_INFO
	SELECT A2.ACCT_ID,A1.CUST_ID
  FROM (SELECT DISTINCT CUST_ID FROM SESSION.CUST_CONTR_INFO) A1
	LEFT JOIN  SDS_CURR_DEPO_ACCT A2
  ON A1.CUST_ID=A2.CUST_ID
	;


  DECLARE GLOBAL TEMPORARY TABLE SESSION.LOAN_OD_INFO_CUST(
	CUST_ID VARCHAR(22)
  ,CUST_CURR_OD_DAYS  DECIMAL(18,0)
  ,CUST_OD_DAYS_12M  DECIMAL(18,0)
	)ON COMMIT PRESERVE ROWS
	NOT LOGGED
	WITH REPLACE
	IN RIAP_UTMP4K1;

  INSERT INTO SESSION.LOAN_OD_INFO_CUST
  (
      CUST_ID
      ,CUST_CURR_OD_DAYS
      ,CUST_OD_DAYS_12M
  )
  SELECT
  A1.CUST_ID
  ,COALESCE(A1.CUST_CURR_OD_DAYS,-999) AS CUST_CURR_OD_DAYS
  ,COALESCE(A2.CUST_OD_DAYS_12M,-999) AS CUST_OD_DAYS_12M
  FROM
  (
        SELECT
        A1.CUST_ID
        ,MAX(A1.OD_DAYS) AS CUST_CURR_OD_DAYS
        FROM
        (
            SELECT B2.CUST_ID
            ,B2.CONTR_START_DT
            ,B1.VALID_FROM_DT
            ,B1.VALID_TO_DT
            ,CASE WHEN B1.VALID_TO_DT>B2.CONTR_START_DT AND B1.LOAN_TYPE_CD=1 THEN DAYS(B2.CONTR_START_DT)-DAYS(B1.VALID_FROM_DT)-1
            WHEN B1.VALID_TO_DT>B2.CONTR_START_DT AND B1.LOAN_TYPE_CD=2 THEN DAYS(B2.CONTR_START_DT)-DAYS(B1.VALID_FROM_DT)
            WHEN B1.VALID_TO_DT<=B2.CONTR_START_DT AND B1.LOAN_TYPE_CD=1 THEN B1.OD_DAYS-1
            ELSE B1.OD_DAYS END AS OD_DAYS
            FROM ADS_LOAN_INT_OD_H B1
            INNER JOIN SESSION.TMP_ACCT_CUST_INFO B2
            ON B1.ACCT_ID=B2.ACCT_ID AND (B2.CONTR_START_DT BETWEEN B1.VALID_FROM_DT AND B1.VALID_TO_DT)
            WHERE B1.OD_FLG='1' AND B1.CUST_ID NOT LIKE '1%'
        )A1
        GROUP BY A1.CUST_ID
  ) A1
  FULL JOIN
  (
        SELECT
        A1.CUST_ID
        ,MAX(A1.OD_DAYS) AS CUST_OD_DAYS_12M
        FROM
        (
            SELECT B2.CUST_ID
            ,B2.CONTR_START_DT
            ,B1.VALID_FROM_DT
            ,B1.VALID_TO_DT
            ,CASE WHEN B1.VALID_TO_DT>B2.CONTR_START_DT AND B1.LOAN_TYPE_CD=1 THEN DAYS(B2.CONTR_START_DT)-DAYS(B1.VALID_FROM_DT)-1
            WHEN B1.VALID_TO_DT>B2.CONTR_START_DT AND B1.LOAN_TYPE_CD=2 THEN DAYS(B2.CONTR_START_DT)-DAYS(B1.VALID_FROM_DT)
            WHEN B1.VALID_TO_DT<=B2.CONTR_START_DT AND B1.LOAN_TYPE_CD=1 THEN B1.OD_DAYS-1
            ELSE B1.OD_DAYS END AS OD_DAYS
            FROM ADS_LOAN_INT_OD_H B1
            INNER JOIN SESSION.TMP_ACCT_CUST_INFO B2
            ON B1.ACCT_ID=B2.ACCT_ID AND (B1.VALID_FROM_DT<=B2.CONTR_START_DT AND B1.VALID_TO_DT>=(B2.CONTR_START_DT-365 DAY) )
            WHERE B1.OD_FLG='1'  AND B1.CUST_ID NOT LIKE '1%'
        )A1
        GROUP BY A1.CUST_ID
  ) A2
  ON A1.CUST_ID=A2.CUST_ID

    ;

  --Ôö¼Ó·¨ÈËÐÅÏ¢-ºÏÍ¬±íÖÐ
  DECLARE GLOBAL TEMPORARY TABLE SESSION.FR_CUST_TMP(
      CONTR_ID VARCHAR(23)
      ,CONTR_START_DT DATE
      ,CUST_ID VARCHAR(23)
      ,CUST_NAME VARCHAR(80)
      ,INDV_CUST_ID  VARCHAR(23)
	)ON COMMIT PRESERVE ROWS
	NOT LOGGED
	WITH REPLACE
	IN RIAP_UTMP4K1;

  INSERT INTO SESSION.FR_CUST_TMP
  SELECT A1.CONTR_ID
      ,A1.CONTR_START_DT
      ,A1.CUST_ID
      ,A1.CUST_NAME
      ,A2.INDV_CUST_ID
  FROM (SELECT DISTINCT CONTR_ID,CONTR_START_DT,CUST_ID,CUST_NAME FROM SESSION.CUST_CONTR_INFO) A1
  INNER JOIN
  (
      SELECT C_ENTNAME
      ,C_IDNO
      ,UDF_MDF_CUSTID('101'||C_IDNO) AS INDV_CUST_ID
	  --º¯ÊýÓÉUDF_MDF_CUSTID2¸ÄÎªUDF_MDF_CUSTID
      ,ROWNUMBER() OVER (PARTITION BY C_ENTNAME ORDER BY D_COMTIME DESC,D_IMPTIME DESC) AS RANK
      FROM DDS_RES_SJJ_FDDBRJBXX
      WHERE C_ENTNAME IS NOT NULL AND C_IDNO NOT LIKE '%(%' AND C_IDNO NOT LIKE  '%£¨%'
	  AND V_DATA_DATE BETWEEN VALID_FROM_DT AND VALID_TO_DT
  ) A2
  ON A1.CUST_NAME=A2.C_ENTNAME AND A2.RANK=1
  ;

  DECLARE GLOBAL TEMPORARY TABLE SESSION.FR_CUST_INFO(
    CONTR_ID VARCHAR(23)
    ,CONTR_START_DT DATE
    ,CUST_ID VARCHAR(23)
    ,CUST_NAME VARCHAR(80)
    ,INDV_CUST_ID  VARCHAR(23)
    ,FR_M_AVG_DEPO_BAL DECIMAL(18,2)
	)ON COMMIT PRESERVE ROWS
	NOT LOGGED
	WITH REPLACE
	IN RIAP_UTMP4K1;

  INSERT INTO SESSION.FR_CUST_INFO
    SELECT A1.CONTR_ID
    ,A1.CONTR_START_DT
    ,A1.CUST_ID
    ,A1.CUST_NAME
    ,A1.INDV_CUST_ID
    ,A2.M_AVG_DEPO_BAL  AS FR_M_AVG_DEPO_BAL
    FROM SESSION.FR_CUST_TMP A1
    LEFT JOIN SDS_INDV_CUST_BASE_INFO_M A2
    ON A1.INDV_CUST_ID=A2.CUST_ID AND A2.STAT_DT = LAST_DAY(A1.CONTR_START_DT)+ 1 DAY- 1 MONTH- 1 DAY
    ;


  DECLARE GLOBAL TEMPORARY TABLE SESSION.TMP_MDL_CORP_LOAN_APP_RISK(
    DATE_ID DATE
    ,CUST_ID VARCHAR(23)
    ,CONTR_ID VARCHAR(16)
    ,CUST_NAME VARCHAR(80)
    ,CONTR_START_DT DATE
    ,CONTR_LIMT DECIMAL(15,2)
    ,LOAN_PROD_CD VARCHAR(5)
    ,GUAR_MODE_CD VARCHAR(3)
    ,CONTR_MATURE_DT DATE
    ,BEL_TO_IDY VARCHAR(4)
    ,FUND_DUR INT
    ,BLK_FLG VARCHAR(1)
    ,CUST_OPEN_DUR SMALLINT
    ,Y_AVG_DEPO_BAL DECIMAL(18,2)
    ,CURR_VALID_ACCT_CNT INT
    ,CUST_CURR_OD_DAYS DECIMAL(18,0)
    ,CUST_OD_DAYS_12M DECIMAL(18,0)
    ,CUST_DISTR_CNT DECIMAL(18,0)
    ,CUST_LOAN_BAL DECIMAL(18,2)
    ,DF_TRAN_AMT DECIMAL(18,2)
    ,FR_M_AVG_DEPO_BAL DECIMAL(18,2)
	)ON COMMIT PRESERVE ROWS
	NOT LOGGED
	WITH REPLACE
	IN RIAP_UTMP4K1;

  INSERT INTO SESSION.TMP_MDL_CORP_LOAN_APP_RISK
  SELECT
  V_DATA_DATE AS DATE_ID
  ,A1.CUST_ID
  ,A1.CONTR_ID
  ,A1.CUST_NAME
  ,A1.CONTR_START_DT
  ,A1.CONTR_LIMT
  ,A1.LOAN_PROD_CD
  ,A1.GUAR_MODE_CD
  ,A1.CONTR_MATURE_DT
  ,A2.BEL_TO_IDY
  ,COALESCE(A2.FUND_DUR,0) AS  FUND_DUR
  ,COALESCE(COALESCE(A32.BLK_FLG,A33.BLK_FLG),A31.BLK_FLG) AS BLK_FLG
  ,COALESCE(COALESCE(COALESCE(A32.OPEN_DUR,A33.OPEN_DUR),A31.OPEN_DUR),0) AS CUST_OPEN_DUR
  ,COALESCE(COALESCE(COALESCE(A32.Y_AVG_DEPO_BAL,A33.Y_AVG_DEPO_BAL),A31.Y_AVG_DEPO_BAL),0) AS Y_AVG_DEPO_BAL
  ,COALESCE(COALESCE(COALESCE(A32.CURR_VALID_ACCT_CNT,A33.CURR_VALID_ACCT_CNT),A31.CURR_VALID_ACCT_CNT),0) AS CURR_VALID_ACCT_CNT
  ,COALESCE(A4.CUST_CURR_OD_DAYS,-999) AS CUST_CURR_OD_DAYS
  ,COALESCE(A4.CUST_OD_DAYS_12M,-999) AS CUST_OD_DAYS_12M
  ,COALESCE(A5.CUST_DISTR_CNT,0) AS CUST_DISTR_CNT
  ,COALESCE(A6.CUST_LOAN_BAL,0) AS CUST_LOAN_BAL
  ,COALESCE(A7.DF_TRAN_AMT,0) AS DF_TRAN_AMT
  ,COALESCE(A8.FR_M_AVG_DEPO_BAL,-999) AS FR_M_AVG_DEPO_BAL
  FROM SESSION.CUST_CONTR_INFO A1
  LEFT JOIN
  (
      SELECT B1.CUST_INNER_ID
            ,B1.CONTR_START_DT
            ,MAX(COALESCE(B2.BEL_TO_IDY,B3.BEL_TO_IDY)) AS BEL_TO_IDY
            ,MAX(CASE WHEN (CASE WHEN B2.BORN_TM='1899-12-31' THEN B3.BORN_TM WHEN B2.BORN_TM IS NULL THEN B3.BORN_TM ELSE B2.BORN_TM END)='1899-12-31' THEN -1
            WHEN MONTHS_BETWEEN(B1.CONTR_START_DT,(CASE WHEN B2.BORN_TM='1899-12-31' THEN B3.BORN_TM WHEN B2.BORN_TM IS NULL THEN B3.BORN_TM ELSE B2.BORN_TM END))<0 THEN -1
            ELSE INT(MONTHS_BETWEEN(B1.CONTR_START_DT,(CASE WHEN B2.BORN_TM='1899-12-31' THEN B3.BORN_TM WHEN B2.BORN_TM IS NULL THEN B3.BORN_TM ELSE B2.BORN_TM END))) END)  AS FUND_DUR
      FROM SESSION.CUST_CONTR_INFO B1
      LEFT JOIN DDS_CREDIT_CUST_BASE_INFO B2
      ON B1.CUST_INNER_ID=B2.CUST_ISN
      AND ((CASE WHEN B1.CONTR_START_DT>'2013-07-24' THEN B1.CONTR_START_DT ELSE '2013-07-24' END) BETWEEN B2.VALID_FROM_DT AND B2.VALID_TO_DT) AND B2.ETL_FLAG <>'D' AND B2.BEL_TO_IDY IS NOT NULL
      LEFT JOIN DDS_CREDIT_CUST_BASE_INFO B3
      ON B1.CUST_INNER_ID=B3.CUST_ISN
      AND (V_DATA_DATE BETWEEN B3.VALID_FROM_DT AND B3.VALID_TO_DT) AND B3.ETL_FLAG <>'D' AND B3.BEL_TO_IDY IS NOT NULL
      GROUP BY B1.CUST_INNER_ID,B1.CONTR_START_DT
  )A2
  ON A1.CUST_INNER_ID=A2.CUST_INNER_ID AND A1.CONTR_START_DT=A2.CONTR_START_DT
  LEFT JOIN SDS_CORP_CUST_BASE_INFO_M A31
  ON A1.CUST_ID=A31.CUST_ID AND ((CASE WHEN A1.CONTR_START_DT=LAST_DAY(A1.CONTR_START_DT) THEN A1.CONTR_START_DT ELSE LAST_DAY(A1.CONTR_START_DT)+1 DAY-1 MONTH-1 DAY END)=A31.STAT_DT)
  LEFT JOIN SDS_CORP_CUST_BASE_INFO_M A32
  ON A1.CUST_ID=A32.CUST_ID AND LAST_DAY(A1.CONTR_START_DT)=A32.STAT_DT
  LEFT JOIN SDS_CORP_CUST_BASE_INFO A33
  ON A1.CUST_ID=A33.CUST_ID
  LEFT JOIN SESSION.LOAN_OD_INFO_CUST A4
  ON A1.CUST_ID=A4.CUST_ID
  LEFT JOIN
  (
  SELECT
  B1.CUST_ID
  ,B1.CONTR_START_DT
  ,COUNT(DISTINCT B2.ACCT_ID) AS CUST_DISTR_CNT
  FROM SESSION.CUST_CONTR_INFO B1
  LEFT JOIN SDS_LOAN_DUBIL_INFO_M B2
  ON B1.CUST_ID=B2.CUST_ID AND (B2.OPEN_DT BETWEEN (B1.CONTR_START_DT- 366 DAY) AND B1.CONTR_START_DT - 1 DAY)
  AND B2.ACCT_ID IS NOT NULL AND TRIM(B2.ACCT_ID)<>''  AND
  B2.STAT_DT=(CASE WHEN LAST_DAY(B1.CONTR_START_DT)=B1.CONTR_START_DT THEN LAST_DAY(B1.CONTR_START_DT)
  ELSE LAST_DAY(B1.CONTR_START_DT)+1 DAY-1 MONTH -1 DAY END)
  GROUP BY B1.CUST_ID,B1.CONTR_START_DT
  )A5
  ON A1.CUST_ID=A5.CUST_ID AND A1.CONTR_START_DT=A5.CONTR_START_DT
  LEFT JOIN
  (
    SELECT B1.CUST_ID
    ,B1.CONTR_START_DT
    ,SUM(CASE WHEN B1.CONTR_START_DT-1 DAY BETWEEN B2.VALID_FROM_DT AND B2.VALID_TO_DT THEN B2.CUST_LOAN_BAL ELSE 0 END) AS CUST_LOAN_BAL
    FROM
    SESSION.CUST_CONTR_INFO B1
    LEFT JOIN
    (
      SELECT DISTINCT C1.CUST_ID
      ,C3.VALID_FROM_DT
      ,C3.VALID_TO_DT
      ,C3.BAL AS CUST_LOAN_BAL
      FROM SESSION.CUST_CONTR_INFO C1
      LEFT JOIN SDS_LOAN_DUBIL_INFO_M C2
      ON C1.CUST_ID=C2.CUST_ID AND C2.CUST_ID NOT LIKE '1%' AND C2.ACCT_ID IS NOT NULL AND TRIM(C2.ACCT_ID)<>''
      AND C2.STAT_DT=(CASE WHEN LAST_DAY(C1.CONTR_START_DT)=C1.CONTR_START_DT THEN LAST_DAY(C1.CONTR_START_DT)
      ELSE LAST_DAY(C1.CONTR_START_DT)+1 DAY-1 MONTH -1 DAY END)
      LEFT JOIN ADS_LOAN_DUBIL_BAL_H C3
      ON C2.DUBIL_ID=C3.DUBIL_ID
    ) B2
    ON B1.CUST_ID=B2.CUST_ID
    GROUP BY B1.CUST_ID,B1.CONTR_START_DT
  )A6
  ON A1.CUST_ID=A6.CUST_ID AND A1.CONTR_START_DT=A6.CONTR_START_DT
  LEFT JOIN
  (
  SELECT
  CUST_ID  ,CONTR_START_DT  ,SUM(DF_TRAN_AMT) AS DF_TRAN_AMT
  FROM
  (
  SELECT  DISTINCT  B1.CUST_ID  ,B1.CONTR_START_DT  ,B2.ACCT_ID  ,B3.TRAN_DT
  ,CASE WHEN (B3.TRAN_DT BETWEEN (B1.CONTR_START_DT-365 DAY) AND (B1.CONTR_START_DT-1 DAY)) THEN B3.TRAN_AMT ELSE 0 END AS DF_TRAN_AMT
  FROM SESSION.CUST_CONTR_INFO B1
  LEFT JOIN SDS_CURR_DEPO_ACCT_M B2
  ON B1.CUST_ID=B2.CUST_ID AND B2.STAT_DT=(CASE WHEN LAST_DAY(B1.CONTR_START_DT)=B1.CONTR_START_DT THEN LAST_DAY(B1.CONTR_START_DT)
      ELSE LAST_DAY(B1.CONTR_START_DT)+1 DAY-1 MONTH -1 DAY END)
  LEFT JOIN
  (
  SELECT ACCT_ID
  ,TRAN_DT
  ,SUM(CASE WHEN DEBIT_FLG='0' THEN TRAN_AMT  ELSE 0 END) AS TRAN_AMT
  FROM ADS_DEPO_TRAN_LIST
  WHERE TRAN_CD NOT IN ('BDAS21','BDS011') AND DEBIT_FLG IS NOT NULL AND TRIM(DEBIT_FLG)<>'' AND TRAN_DT<=V_DATA_DATE
  AND ABST_CD not in ('5261','5265','5266','5267','5268')
  GROUP BY ACCT_ID,TRAN_DT
  ) B3
  ON B2.ACCT_ID=B3.ACCT_ID
  )
  GROUP BY CUST_ID,CONTR_START_DT
  )A7
  ON A1.CUST_ID=A7.CUST_ID AND A1.CONTR_START_DT=A7.CONTR_START_DT
  LEFT JOIN SESSION.FR_CUST_INFO A8
  ON A1.CONTR_ID=A8.CONTR_ID
;

INSERT INTO MDL_CORP_LOAN_APP_RISK
(
		DATE_ID
    ,CUST_ID
    ,CONTR_ID
    ,CUST_NAME
    ,CONTR_START_DT
    ,CONTR_LIMT
    ,LOAN_PROD_CD
    ,GUAR_MODE_CD
    ,CONTR_MATURE_DT
    ,BEL_TO_IDY
    ,FUND_DUR
    ,BLK_FLG
    ,CUST_OPEN_DUR
    ,Y_AVG_DEPO_BAL
    ,CURR_VALID_ACCT_CNT
    ,CUST_CURR_OD_DAYS
    ,CUST_OD_DAYS_12M
    ,CUST_DISTR_CNT
    ,CUST_LOAN_BAL
    ,DF_TRAN_AMT
    ,FR_M_AVG_DEPO_BAL
		,GUAR_MODE_CD_1
    ,Y_AVG_DEPO_BAL_1
    ,Y_AVG_DEPO_BAL_2
    ,CURR_VALID_ACCT_CNT_1
    ,FUND_DUR_1
    ,FUND_DUR_2
    ,DF_TRAN_AMT_1
    ,DF_TRAN_AMT_2
    ,FR_M_AVG_DEPO_BAL_1
    ,FR_M_AVG_DEPO_BAL_2
    ,EST_Y
    ,LOAN_APP_SCORE

	)
SELECT
		A1.DATE_ID
    ,A1.CUST_ID
    ,A1.CONTR_ID
    ,A1.CUST_NAME
    ,A1.CONTR_START_DT
    ,A1.CONTR_LIMT
    ,A1.LOAN_PROD_CD
    ,A1.GUAR_MODE_CD
    ,A1.CONTR_MATURE_DT
    ,A1.BEL_TO_IDY
    ,A1.FUND_DUR
    ,A1.BLK_FLG
    ,A1.CUST_OPEN_DUR
    ,A1.Y_AVG_DEPO_BAL
    ,A1.CURR_VALID_ACCT_CNT
    ,A1.CUST_CURR_OD_DAYS
    ,A1.CUST_OD_DAYS_12M
    ,A1.CUST_DISTR_CNT
    ,A1.CUST_LOAN_BAL
    ,A1.DF_TRAN_AMT
    ,A1.FR_M_AVG_DEPO_BAL
		,A1.GUAR_MODE_CD_1
    ,A1.Y_AVG_DEPO_BAL_1
    ,A1.Y_AVG_DEPO_BAL_2
    ,A1.CURR_VALID_ACCT_CNT_1
    ,A1.FUND_DUR_1
    ,A1.FUND_DUR_2
    ,A1.DF_TRAN_AMT_1
    ,A1.DF_TRAN_AMT_2
    ,A1.FR_M_AVG_DEPO_BAL_1
    ,A1.FR_M_AVG_DEPO_BAL_2
		--¼ÆËãÆÀ·Ö
		,(-1.92789)
      +(0.95413)*A1.GUAR_MODE_CD_1
      +(3.15375)*A1.Y_AVG_DEPO_BAL_1
      +(2.04612)*A1.Y_AVG_DEPO_BAL_2
      +(0.45767)*A1.FR_M_AVG_DEPO_BAL_1
      +(1.05718)*A1.FR_M_AVG_DEPO_BAL_2
      +(0.64138)*A1.CURR_VALID_ACCT_CNT_1
      +(0.6908)*A1.FUND_DUR_1
      +(0.78821)*A1.FUND_DUR_2
      +(-0.71142)*A1.DF_TRAN_AMT_1
      +(0.57961)*A1.DF_TRAN_AMT_2
		AS EST_Y
		--¼ÆËãÆÀ·Ö
		,INT(1000/(1+EXP((-1.92789)
      +(0.95413)*A1.GUAR_MODE_CD_1
      +(3.15375)*A1.Y_AVG_DEPO_BAL_1
      +(2.04612)*A1.Y_AVG_DEPO_BAL_2
      +(0.45767)*A1.FR_M_AVG_DEPO_BAL_1
      +(1.05718)*A1.FR_M_AVG_DEPO_BAL_2
      +(0.64138)*A1.CURR_VALID_ACCT_CNT_1
      +(0.6908)*A1.FUND_DUR_1
      +(0.78821)*A1.FUND_DUR_2
      +(-0.71142)*A1.DF_TRAN_AMT_1
      +(0.57961)*A1.DF_TRAN_AMT_2
    )))
		AS LOAN_APP_SCORE
	FROM
	(
	SELECT
    	B1.DATE_ID
      ,B1.CUST_ID
      ,B1.CONTR_ID
      ,B1.CUST_NAME
      ,B1.CONTR_START_DT
      ,B1.CONTR_LIMT
      ,B1.LOAN_PROD_CD
      ,B1.GUAR_MODE_CD
      ,B1.CONTR_MATURE_DT
      ,B1.BEL_TO_IDY
      ,B1.FUND_DUR
      ,B1.BLK_FLG
      ,B1.CUST_OPEN_DUR
      ,B1.Y_AVG_DEPO_BAL
      ,B1.CURR_VALID_ACCT_CNT
      ,B1.CUST_CURR_OD_DAYS
      ,B1.CUST_OD_DAYS_12M
      ,B1.CUST_DISTR_CNT
      ,B1.CUST_LOAN_BAL
      ,B1.DF_TRAN_AMT
      ,B1.FR_M_AVG_DEPO_BAL
		--ÎªÆÀ·ÖÒò×Ó×ö×¼±¸
		,CASE WHEN B1.GUAR_MODE_CD ='210' THEN 1 ELSE 0 END AS GUAR_MODE_CD_1
		,CASE WHEN B1.Y_AVG_DEPO_BAL <10000 THEN 1 ELSE 0 END AS Y_AVG_DEPO_BAL_1
    ,CASE WHEN B1.Y_AVG_DEPO_BAL <50000 AND B1.Y_AVG_DEPO_BAL>=10000 THEN 1 ELSE 0 END AS Y_AVG_DEPO_BAL_2
    ,CASE WHEN B1.CURR_VALID_ACCT_CNT>=3 THEN 1 ELSE 0 END AS CURR_VALID_ACCT_CNT_1
    ,CASE WHEN B1.FUND_DUR<24 THEN 1 ELSE 0 END AS FUND_DUR_1
    ,CASE WHEN B1.FUND_DUR>=120 THEN 1 ELSE 0 END AS FUND_DUR_2
		,CASE WHEN B1.DF_TRAN_AMT<12000000 THEN 1 ELSE 0 END AS DF_TRAN_AMT_1
    ,CASE WHEN B1.DF_TRAN_AMT>=100000000 THEN 1 ELSE 0 END AS DF_TRAN_AMT_2
    ,CASE WHEN B1.FR_M_AVG_DEPO_BAL=-999 THEN 1 ELSE 0 END AS FR_M_AVG_DEPO_BAL_1
    ,CASE WHEN B1.FR_M_AVG_DEPO_BAL<10000 AND B1.FR_M_AVG_DEPO_BAL>-999 THEN 1 ELSE 0 END AS FR_M_AVG_DEPO_BAL_2
		FROM SESSION.TMP_MDL_CORP_LOAN_APP_RISK B1
    WHERE TRIM(LOAN_PROD_CD) IN ('512A1','512A2','512A3','522A3')
    AND TRIM(BEL_TO_IDY) NOT IN ('3711','44','45','46','63','65','67','701','71','73','75','76','77','78','82','83','84','85','86''90','93','94','95','97','9710')
    AND GUAR_MODE_CD NOT IN ('411','412','421','422','490')
    AND CUST_NAME NOT IN ('µÂÇåÖÐÐÀÌÂ´ÉÖÆÆ·ÓÐÏÞ¹«Ë¾','µÂÇåÈóÓ¯·ÄÖ¯Æ·ÓÐÏÞ¹«Ë¾','µÂÇåöÎ³É·ÄÖ¯Æ·ÓÐÏÞ¹«Ë¾','µÂÇåÏØÏèÊ¢½ðÊôÖÆÆ·ÓÐÏÞ¹«Ë¾','µÂÇåË¼È»·ÄÖ¯Æ·ÓÐÏÞ¹«Ë¾','µÂÇåÒæÏè»úÐµÖýÔìÓÐÏÞ¹«Ë¾')
    AND CONTR_LIMT<=5000000
    AND CONTR_START_DT>='2013-07-01'
    AND (BLK_FLG='0' OR BLK_FLG IS NULL)
    AND (CUST_CURR_OD_DAYS<11 OR CUST_CURR_OD_DAYS IS NULL)
    AND (CUST_OD_DAYS_12M<60 OR CUST_OD_DAYS_12M IS NULL)
	)A1
	;


 	--Õý³£ÔËÐÐ,È«²¿Ìá½»
	COMMIT;

END;